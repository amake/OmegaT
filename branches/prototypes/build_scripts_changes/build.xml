<?xml version="1.0" encoding="UTF-8"?>

<!--
/**************************************************************************
 OmegaT - Java based Computer Assisted Translation (CAT) tool
 Copyright (C) 2000-2007 Keith Godfrey and Maxym Mykhalchuk
               2008 Alex Buloichik
               Home page: http://www.omegat.org/omegat/omegat.html
               Support center: http://groups.yahoo.com/group/OmegaT/

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
**************************************************************************/
-->

<!--

  Tasks supported by this script:
  
  clean:   clear all compiled files
  compile: compile project
  run:     run application
  release: build aplication release

-->
<project name="OmegaT" default="release" basedir=".">
    <property name="src.version" value="1.5" />
    <property name="src.encoding" value="ISO-8859-1" />
    <property name="mainclass" value="org.omegat.Main" />

    <!-- Define application version -->
    <property file="src/org/omegat/Version.properties" />
    <condition property="updatenr" value="0${update}" else="${jupdate}">
        <length string="${update}" length="1" />
    </condition>
    <condition property="distversion" value="${version}" else="${version}_${updatenr}">
        <equals arg1="${updatenr}" arg2="00" />
    </condition>


    <!-- Cleans all build results, i.e. directories 'build' and 'dist' -->
    <target name="clean" description="Cleans all build results, i.e. directories 'build' and 'dist'">
        <delete dir="build" failonerror="no" />
        <delete dir="dist" failonerror="no" />
        <delete dir="dist2" failonerror="no" />
        <ant dir="lib-mnemonics" antfile="build.xml" target="clean" />
    </target>

    <!-- Compile java sources -->
    <target name="compile" depends="lib-mnemonics" description="Compile java sources">
        <mkdir dir="build/classes" />
        <javac srcdir="src"
               destdir="build/classes"
               classpathref="app.jars"
               source="${src.version}"
               target="${src.version}"
               encoding="${src.encoding}" />
        <copy todir="build/classes">
            <fileset dir="src" excludes="**/*.java,**/*.form" />
        </copy>
    </target>

    <!-- Run application -->
    <target name="run" depends="compile" description="Run application">
        <java classpathref="app.jars" maxmemory="256m" failonerror="true" classname="${mainclass}" fork="true">
            <classpath path="build/classes" />
        </java>
    </target>

    <!-- Pack classes into jar -->
    <target name="jar" depends="compile" description="Pack classes into jar">
        <mkdir dir="build" />
        <pathconvert property="app.jars.path" refid="app.jars" pathsep=" " dirsep="/">
            <map from="${basedir}/lib-mnemonics/dist/" to="lib/" />
            <map from="${basedir}/" to="" />
        </pathconvert>
        <jar file="build/OmegaT.jar" basedir="build/classes">
            <manifest>
                <attribute name="Main-Class" value="${mainclass}" />
                <attribute name="Class-Path" value="${app.jars.path}" />
                <attribute name="Implementation-Version" value="${version}" />
                <attribute name="License" value="GNU Public License version 2" />
            </manifest>
        </jar>
    </target>

    <!-- Prepare application for distribution -->
    <target name="release" depends="clean,jar,dist-src,l10n-pack" description="Prepare application for distribution">
        <mkdir dir="dist" />

        <copy todir="dist">
            <fileset dir="release" includes="*" excludes="readme.txt win32-specific l10n-project" />
        </copy>
        <copy todir="dist" file="release/readme.txt">
            <!-- Remove TRANSLATION_NOTICE placeholder (from English readme) -->
            <filterset begintoken="@@" endtoken="@@">
                <filter token="TRANSLATION_NOTICE" value="" />
            </filterset>
        </copy>
        <mkdir dir="dist/docs" />
        <copy todir="dist/docs">
            <!-- copy all files except English legalNotices.html -->
            <fileset dir="docs" excludes="en/legalNotices.html" />
        </copy>
        <copy todir="dist/docs">
            <!-- copy just English legalNotices.html -->
            <fileset dir="docs" includes="en/legalNotices.html" />
            <!-- Remove TRANSLATION_NOTICE placeholder (from English manual) -->
            <filterset begintoken="@@" endtoken="@@">
                <filter token="TRANSLATION_NOTICE" value="" />
            </filterset>
        </copy>
        <mkdir dir="dist/images" />
        <copy todir="dist/images">
            <fileset dir="images" />
        </copy>
        <mkdir dir="dist/lib" />
        <copy todir="dist/lib">
            <fileset dir="lib" />
            <fileset dir="lib-mnemonics/dist" />
        </copy>
        <copy todir="dist">
            <fileset dir="build" includes="*.jar" />
        </copy>

        <zip basedir="dist" destfile="dist2/OmegaT_${distversion}.zip" />
    </target>


    <!-- Builds a source pack -->
    <target name="dist-src" description="Build source distribution">
        <mkdir dir="dist2" />
        <zip destfile="dist2/OmegaT_${distversion}_Source.zip"
             basedir="."
             excludes="**/nbproject/private/** **/build/** **/dist/** .classpath .project" />
    </target>

    <!-- Build a distribution of localizable files -->
    <target name="l10n-pack" description="Build a distribution of localizable files">
        <property name="l10n.project.dir" value="release/l10n-project" />
        <property name="l10n.dir" value="build/l10n" />

        <mkdir dir="dist2" />
        <!-- minimal -->
        <property name="l10n.min" value="OmegaT_${distversion}_L10N_Minimal" />
        <property name="l10n.min.dir" value="${l10n.dir}/${l10n.min}" />
        <mkdir dir="${l10n.min.dir}" />
        <copy todir="${l10n.min.dir}">
            <fileset dir="${l10n.project.dir}" />
        </copy>
        <copy todir="${l10n.min.dir}/source">
            <fileset dir="." includes="docs/en/instantStartGuideNoTOC.html src/**/Bundle.properties" />
        </copy>
        <copy file="release/readme.txt" tofile="${l10n.min.dir}/source/readme.utf8">
            <filterset begintoken="@@" endtoken="@@">
                <filter token="TRANSLATION_NOTICE"
                        value="This translation is the work of [insert your name], copyright© [insert year]." />
            </filterset>
        </copy>
        <zip destfile="dist2/${l10n.min}.zip" basedir="${l10n.dir}" includes="${l10n.min}/**" />

        <!-- full -->
        <property name="l10n.max" value="OmegaT_${distversion}_L10N_Full" />
        <property name="l10n.max.dir" value="${l10n.dir}/${l10n.max}" />
        <mkdir dir="${l10n.max.dir}" />
        <copy todir="${l10n.max.dir}">
            <fileset dir="${l10n.project.dir}" />
        </copy>
        <copy todir="${l10n.max.dir}/source">
            <!-- Copy all files except legalNotices.html -->
            <fileset dir="." includes="docs/en/** src/**/Bundle.properties" excludes="docs/en/legalNotices.html" />
        </copy>
        <copy file="release/readme.txt" tofile="${l10n.max.dir}/source/readme.utf8">
            <filterset begintoken="@@" endtoken="@@">
                <filter token="TRANSLATION_NOTICE"
                        value="This translation is the work of [insert your name], copyright© [insert year]." />
            </filterset>
        </copy>
        <copy todir="${l10n.max.dir}/source">
            <fileset dir="." includes="docs/en/legalNotices.html" />
            <filterset begintoken="@@" endtoken="@@">
                <filter token="TRANSLATION_NOTICE"
                        value="&lt;p&gt;This translation is the work of [insert your name], copyright© [insert year].&lt;/p&gt;" />
            </filterset>
        </copy>
        <zip destfile="dist2/${l10n.max}.zip" basedir="${l10n.dir}" includes="${l10n.max}/**" />
    </target>



    <!-- Check if runned on Windows and install exists -->
    <target name="check-win" depends="release">
        <condition property="os.windows">
            <and>
                <os family="windows" />
                <available file="${iscc.exe}" filepath="${java.library.path}" />
            </and>
        </condition>
    </target>

    <!-- Build Win32 distro -->
    <target name="win" description="Build Win32 distro if on Windows" depends="check-win,release" if="os.windows">
        <copy todir="dist" file="release/win32-specific/OmegaT.exe" />

        <filter token="VERSION_NUMBER_SUBST" value="${distversion}" />
        <copy todir="dist" file="release/win32-specific/OmegaT.iss" filtering="on" />

        <mkdir dir="dist2" />
        <exec executable="${iscc.exe}">
            <arg file="dist/OmegaT.iss" />
        </exec>
    </target>

    <!-- Build lib-mnemonics.jar -->
    <target name="lib-mnemonics" description="Build lib-mnemonics.jar">
        <ant dir="lib-mnemonics" antfile="build.xml" target="jar" />
    </target>


    <!-- Path for all jars for project -->
    <path id="app.jars">
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="lib-mnemonics/dist">
            <include name="**/*.jar" />
        </fileset>
    </path>
</project>
